---
import type { Publication } from "@/types/publication";
import { Icon } from "astro-icon/components";

interface Props extends Publication {}

const { ...pubAttrs } = Astro.props;

// Preprocess the title of the publication with the year
const pubTitle = `<span>${pubAttrs.year}</span> ${pubAttrs.title}`;

// Preprocess the type of publication
let typetxt;
let citeClass;
let bibTexHead;
switch (pubAttrs.type) {
	case "jpaper":
		typetxt = "Journal Paper";
		citeClass = "journal";
		bibTexHead = "@article{";
		break;
	case "cpaper":
		typetxt = "Conference Paper";
		citeClass = "conference";
		bibTexHead = "@inproceedings{";
		break;
	case "bookchapter":
		typetxt = "Book Chapter";
		citeClass = "book";
		bibTexHead = "@inbook{";
		break;
	case "phdthesis":
		typetxt = "Thesis";
		citeClass = "thesis";
		bibTexHead = "@phdthesis{";
		break;
	case "masterthesis":
		typetxt = "Thesis";
		citeClass = "thesis";
		bibTexHead = "@masterthesis{";
		break;
	default:
		typetxt = "";
		bibTexHead = "";
}

// Preprocess bibtext citation
let bibTex = `${bibTexHead}${pubAttrs.key},
                              <br>`;
for (let key in pubAttrs) {
	if (
		key === "in" ||
		key === "key" ||
		key === "abstract" ||
		key === "x" ||
		key === "abstract" ||
		key === "download" ||
		key === "url" ||
		key === "type" ||
		key === "title" ||
		key === "author" ||
		key === "year" ||
		key === "class"
	) {
		continue;
	} else {
		bibTex += `<span>${key} = "${(pubAttrs as any)[key]}"</span>,
                                   <br>`;
	}
}
bibTex += "}";
---

<article class="publication-card">
	<div class="pubmain">
		<h3 set:html={pubTitle} class="title" />
		<p class="authors">
			{
				pubAttrs.author.map((contributor, i, array) =>
					["Daniel Rodriguez-Criado", "Daniel Rodriguez Criado", "Daniel Rodriguez"].includes(
						contributor
					) ? (
						<Fragment
							set:html={`<strong class="my-name"> ${
								contributor +
								"</strong>" +
								(i < array.length - 2 ? ", " : "") +
								(i == array.length - 2 ? " and " : "")
							}`}
						/>
					) : (
						<span>
							{contributor +
								(i < array.length - 2 ? ", " : "") +
								(i == array.length - 2 ? " and " : "")}
						</span>
					)
				)
			}
		</p>
		<p class="cite">
			<span class:list={citeClass}>{typetxt}</span>{pubAttrs.in}
		</p>
		<div class="assets">
			{
				pubAttrs.url && (
					<a class="pubgo" target="_blank" href={pubAttrs.url}>
						<Icon name="publications/link" />
					</a>
				)
			}
			<a class="pubdownload" target="_blank" href={pubAttrs.download}>
				<Icon name="publications/download" />
			</a>
			<button class="pubcollapse">
				<Icon class="down" name="publications/down" />
				<Icon class="up visually-hidden" name="publications/up" />
			</button>
		</div>
	</div>

	<div class="pubdetails">
		<h4>BibTeX citation</h4>
		<p set:html={bibTex} class="bibtex" />
		<h4>Abstract</h4>
		<p class="abstract">
			{pubAttrs.abstract}
		</p>
	</div>
</article>

<style>
	.publication-card {
		--_padding: 1.5rem;
		position: relative;
		color: oklch(var(--clr-text-invert));
		background-color: oklch(var(--clr-text));
	}

	.pubmain {
		padding: var(--_padding);
		position: relative;

		.title {
			font-weight: var(--fw-bold);
			font-size: clamp(var(--fs-400), 1.5vw, var(--fs-600));

			span {
				font-style: italic;
			}
		}

		.authors .my-name {
			color: oklch(var(--clr-accent));
			font-weight: var(--fw-bold);
		}

		.cite {
			display: flex;
			align-items: center;
			font-style: italic;

			span {
				display: inline-block;
				color: white;
				font-style: normal;
				font-size: var(--fs-300);
				font-weight: var(--fw-bold);
				padding: 0.12em 0.5em;

				border-radius: 5px;
				margin-right: 1em;
			}
			.journal {
				background-color: red;
			}
			.conference {
				background-color: green;
			}
			.thesis {
				background-color: teal;
			}
			.book {
				background-color: orange;
			}
		}

		.assets {
			position: absolute;
			right: 0;
			bottom: 0;
			display: flex;

			background-color: oklch(var(--clr-primary) / 0.6);

			&::before {
				content: "";
				position: absolute;
				top: 0;
				left: 0;
				right: 0;
				height: 2px;
				background-color: oklch(var(--clr-primary));
			}

			a,
			button {
				display: flex;
				justify-content: center;
				align-items: center;

				height: 2.5rem;
				width: 2.5rem;

				font-size: 1.5rem;
				color: oklch(var(--clr-text-invert));
			}

			a:hover {
				background-color: oklch(var(--clr-primary));
				color: oklch(var(--clr-text));
			}

			button {
				background-color: oklch(var(--clr-primary));
			}
		}
	}
	.pubdetails {
		max-height: 0;

		overflow: hidden;
		transition:
			max-height 0.3s ease-in-out,
			padding 0.3s ease-in-out;
		box-shadow: 0 -2px 0 0 oklch(var(--clr-primary));

		h4 {
			color: oklch(var(--clr-accent));
			font-weight: var(--fw-bold);
		}

		.bibtex {
			margin-bottom: 1.5em;
			span {
				margin-left: 40px;
			}
		}
		&.show {
			max-height: 1000px;
			padding: var(--_padding);
		}
	}
</style>

<script>
	import { $, $$ } from "@/lib/dom-selector";

	function eventHandler(button: HTMLElement) {
		const pubDetails = $(".pubdetails", button.closest(".publication-card") as HTMLElement);
		pubDetails.classList.toggle("show");

		// Change icon based on the state of the publication details
		const upIcon = $(".up", button);
		const downIcon = $(".down", button);

		upIcon.classList.toggle("visually-hidden");
		downIcon.classList.toggle("visually-hidden");
	}

	document.addEventListener("astro:page-load", () => {
		// Add a click event listener to the publication collapse button
		const collapseButtons = $$(".pubcollapse");
		collapseButtons.forEach((button) => {
			button.addEventListener("click", () => eventHandler(button as HTMLElement));
		});
	});
</script>
