---
interface Props {
	id: string;
}

const { id } = Astro.props;
---

<button
	id={id}
	aria-expanded="false"
	aria-controls="main-nav"
	class="hamburgerButton"
	aria-label="It opens the navigation menu"
>
	<svg class="ham" viewBox="26 26 49 49" width="80" fill="currentColor">
		<path
			fill="currentColor"
			class="line top"
			d="m 30,33 h 40 c 0,0 9.044436,-0.654587 9.044436,-8.508902 0,-7.854315 -8.024349,-11.958003 -14.89975,-10.85914 -6.875401,1.098863 -13.637059,4.171617 -13.637059,16.368042 v 40"
		></path>
		<path fill="currentColor" class="line middle" d="m 30,50 h 40"></path>
		<path
			fill="currentColor"
			class="line bottom"
			d="m 30,67 h 40 c 12.796276,0 15.357889,-11.717785 15.357889,-26.851538 0,-15.133752 -4.786586,-27.274118 -16.667516,-27.274118 -11.88093,0 -18.499247,6.994427 -18.435284,17.125656 l 0.252538,40"
		></path>
	</svg>
</button>

<style>
	.hamburgerButton {
		position: relative;
		z-index: 9999;
		width: 4rem;
		display: none;
		@media (--media-tablet) {
			display: flex;
			align-items: center;
		}
	}

	.ham {
		tap-highlight-color: transparent;
		user-select: none;

		.line {
			fill: none;
			transition:
				stroke-dasharray 400ms,
				stroke-dashoffset 400ms;
			stroke: oklch(var(--clr-text));
			stroke-width: 5.5;
			stroke-linecap: round;
		}

		.top {
			stroke-dasharray: 40 139;
		}

		.bottom {
			stroke-dasharray: 40 180;
		}
	}

	.open > .ham {
		transform: rotate(45deg);

		.top {
			stroke-dashoffset: -98px;
		}

		.bottom {
			stroke-dashoffset: -138px;
		}
	}
</style>

<script>
	import { $, $$ } from "@/lib/dom-selector";

	const DISPLAY = {
		hamburgerMenuClass: ".hamburgerButton",
		open: "open",
		hamburgerButtonClicked: "hamburgerButtonClicked",
	} as const;

	document.addEventListener("astro:page-load", () => {
		const $hamburgerButton = $(DISPLAY.hamburgerMenuClass);

		$hamburgerButton.addEventListener("click", () => {
			$hamburgerButton.classList.toggle(DISPLAY.open);
			const isMenuOpen = $hamburgerButton.classList.contains(DISPLAY.open);
			$hamburgerButton.setAttribute("aria-expanded", String(isMenuOpen));
			$hamburgerButton.setAttribute(
				"aria-label",
				isMenuOpen ? "Close navigation menu" : "Open navigation menu"
			);
			const hamburgerButtonClick = new CustomEvent(DISPLAY.hamburgerButtonClicked);
			$hamburgerButton.dispatchEvent(hamburgerButtonClick);
		});
		if ($hamburgerButton?.classList?.contains(DISPLAY.open))
			$hamburgerButton?.classList?.remove(DISPLAY.open);
	});
</script>
