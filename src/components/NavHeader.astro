---
import { Icon } from "astro-icon/components";
import ThemeToggle from "./buttons/ThemeToggle.astro";
import Hamburger from "@/components/buttons/Hamburger.astro";
import Logo from "@/icons/logo.astro";
import "@/styles/animations.css";

let primaryColor: string = "oklch(var(--clr-primary))";
let accentColor: string = "oklch(var(--clr-accent))";

const { pathname } = Astro.url;
const normalizedPathName =
	pathname.length > 1 && pathname.endsWith("/") ? pathname.slice(0, -1) : pathname;

const pages = [
	{ name: "Home", href: "/" },
	{ name: "Projects", href: "/projects" },
	{ name: "Publications", href: "/publications" },
	{ name: "Blog", href: "/blog", active: normalizedPathName.startsWith("/blog") },
	{ name: "Contact me", href: "/contact-me" },
].map((page) => ({
	...page,
	active: page.active ?? normalizedPathName === page.href,
}));
---

<header class="main-header">
	<div class="logo-theme">
		<a href="/">
			<Logo className="logo__img" gradFrom={primaryColor} gradTo={accentColor} />
		</a>
		<ThemeToggle />
	</div>
	<Hamburger id="menuButton" />
	<nav id="main-nav" role="navigation">
		<a href="/">
			<Logo className="inner-logo__img" gradFrom={primaryColor} gradTo={accentColor} />
		</a>
		<ul role="menubar">
			{
				pages.map(({ name, href, active }) => (
					<li role="none">
						<a class:list={["menu-item", { "current-page": active }]} href={href} role="menuitem">
							<Icon name={`nav-icons/${name.split(" ")[0].toLowerCase()}`} />
							{name}
						</a>
					</li>
				))
			}
		</ul>
	</nav>
</header>

<style>
	.main-header {
		display: flex;
		align-items: center;
		justify-content: space-around;

		height: var(--navbar-height);
		padding-inline: min(1rem, 2vw);

		position: fixed;
		inset: 0 0 auto 0;
		z-index: 100;

		background-color: oklch(var(--clr-background) / 0.01);
		animation: blur linear forwards;
		animation-timeline: scroll();
		animation-range: 0 500px;

		.logo-theme {
			display: flex;
			align-items: center;
			flex-shrink: 0;
			gap: 2rem;

			a {
				display: flex;
				align-items: center;
			}

			:global(.logo__img) {
				height: 5rem;
				width: 5rem;
			}
		}

		a:has(> .inner-logo__img) {
			display: none;
		}
	}

	#main-nav > ul {
		display: flex;
		gap: 1.5rem;
		align-items: center;
		justify-content: center;

		a {
			display: flex;
			align-items: center;
			gap: 0.5rem;

			line-height: 3rem;
			padding-inline: 1rem;
			border-radius: 0.5rem;
			font-weight: var(--fw-bold);
		}

		.current-page,
		a:hover,
		a:focus-visible {
			background: oklch(var(--clr-accent));
			color: oklch(var(--clr-text-invert));
		}
	}

	@media (--media-tablet) {
		.main-header {
			justify-content: space-between;
			padding-inline: 10vw;

			#main-nav {
				position: absolute;
				inset: 0;
				height: 100dvh;
				width: 100dvw;

				display: grid;
				justify-items: center;
				place-content: center;

				transform: translateX(150%);
				transition: transform 0.5s ease-in-out;

				background-color: oklch(var(--clr-background) / 0.5);
				backdrop-filter: blur(8px);

				& > ul {
					flex-direction: column;
					gap: 1rem;
					align-items: center;

					a {
						line-height: 2em;
						font-size: var(--fs-600);
					}
				}

				a:has(> .inner-logo__img) {
					display: block;
					height: 10rem;
					width: 10rem;
					position: relative;
					z-index: 200;
				}

				&.open {
					transform: translateX(0);
				}
			}
			.logo-theme > a {
				display: none;
			}
		}
	}

	@media (--media-mobile) {
		.main-header {
			--_menu-width: 100vw;
		}
	}
</style>

<script>
	import { $, $$ } from "@/lib/dom-selector";

	const $menuItems = $$(".menu-item");
	const $activeElement = $(".current-page");
	const $mainNav = $("#main-nav");
	const $hamburgerButton = $("#menuButton");

	document.addEventListener("astro:page-load", () => {
		$menuItems.forEach(($element) => {
			$element.addEventListener("mouseover", () => {
				$menuItems.forEach((item) => {
					if (item.classList.contains("current-page")) {
						item.classList.remove("current-page");
					}
				});
			});
		});

		if ($mainNav != null) {
			$mainNav.addEventListener("mouseleave", () => {
				if ($activeElement != null) {
					$activeElement.classList.add("current-page");
				}
			});
		}

		$hamburgerButton?.addEventListener("hamburgerButtonClicked", () => {
			$mainNav?.classList.toggle("open");
			document.body.classList.toggle("overflow-hidden");
		});
	});
</script>
