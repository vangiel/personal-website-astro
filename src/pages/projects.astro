---
import ProjectCard from "@/components/cards/ProjectCard.astro";
import Layout from "@/layouts/Layout.astro";
import PageBanner from "@/sections/PageBanner.astro";

import BannerImg from "@/images/projects/projects-banner.png";

import { getCollection } from "astro:content";

// TODO: sort the projects by the order parameter
const docs = (await getCollection("docs")).sort((a, b) => {
	const aDate = a.data.lastUpdated ? a.data.lastUpdated.valueOf() : 0;
	const bDate = b.data.lastUpdated ? b.data.lastUpdated.valueOf() : 0;
	return (aDate as number) - (bDate as number);
});

// This function format the text in the slug to use it as a title
function formatTittle(slug: string) {
	let title = slug.split("/")[0].split("-").join(" ");
	return title.charAt(0).toUpperCase() + title.slice(1);
}

let titles: string[] = [];
for (let i = 0; i < docs.length; i++) {
	const doc = docs[i];
	const title = formatTittle(doc.slug);
	if (!titles.includes(title)) {
		titles.push(title);
	}
}

let titlesToDisplay: string[] = [];
for (let i = 0; i < titles.length; i++) {
	switch (titles[i]) {
		case "Navigation":
			titlesToDisplay.push("Human-Aware Navigation (HAN) with robots");
			break;
		case "Pose estimation":
			titlesToDisplay.push("3D Human Pose Estimation (HPE)");
			break;
		default:
			titlesToDisplay.push(titles[i]);
	}
}
---

<Layout title="Projects">
	<PageBanner image={BannerImg} title="Projects" description="A list of my projects" />
	<main>
		<section>
			{
				titles.map((title, index) => (
					<>
						<h2 class="projects-field">{titlesToDisplay[index]}</h2>
						<ul class="projects-list">
							{docs.map(
								(doc) =>
									formatTittle(doc.slug) === title && (
										<li>
											<ProjectCard {...doc.data} slug={doc.slug} />
										</li>
									)
							)}
						</ul>
					</>
				))
			}
		</section>
	</main>
</Layout>

<style>
	section {
		max-width: clamp(20rem, 90vw, 150rem);
		margin-inline: auto;
		padding-block-end: 5rem;

		.projects-field {
			font-size: var(--fs-700);
			font-weight: var(--fw-bold);
			color: oklch(var(--clr-accent));
			margin-block: 2rem;
		}

		.projects-list {
			display: grid;
			gap: 1.5rem;
			grid-template-columns: repeat(auto-fill, minmax(40rem, 1fr));
		}
	}
</style>
