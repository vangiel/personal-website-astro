---
import Pagination from "@/components/blog/Pagination.astro";
import PostComments from "@/components/blog/PostComments.astro";
import FormattedDate from "@/components/FormattedDate.astro";
import Layout from "@/layouts/Layout.astro";
import "@/styles/blog/blog-asides.css";
import "@/styles/blog/blog-file-tree.css";
import "@/styles/blog/blog-table.css";
import "@/styles/starlight-styles.css";
import "@fontsource/source-code-pro";
import { Image } from "astro:assets";

import { type CollectionEntry } from "astro:content";

type Props = CollectionEntry<"blog">["data"] & { postId: string };
const { title, heroImage, imageAlt, pubDate, postId } = Astro.props;
const currentPath = Astro.url.pathname;
---

<Layout title={title}>
	<meta slot="head" property="og:title" content={title} />
	<meta slot="head" property="og:type" content="article" />
	<meta slot="head" property="og:url" content={"https://danielrodriguezcriado.es" + currentPath} />
	<meta
		slot="head"
		property="og:image"
		content={"https://danielrodriguezcriado.es" + heroImage.src}
	/>
	<header class="main-header">
		<button class="back-button">
			<a href="/blog">
				<svg viewBox="0 -960 960 960" xmlns="http://www.w3.org/2000/svg" height="20" width="20"
					><path d="m313-440 224 224-57 56-320-320 320-320 57 56-224 224h487v80H313Z" fill="#BFC7D2"
					></path></svg
				>
				Back to blog
			</a>
		</button>
	</header>
	<main transition:name={title}>
		<section>
			<article>
				<header class="article-header">
					<Image
						class="image"
						src={heroImage}
						alt={imageAlt as string}
						width="1000"
						height="1000"
					/>
					<h1>{title}</h1>
					<FormattedDate className="date" date={pubDate} />
				</header>
				<div class="text">
					<slot />
				</div>
			</article>
			<Pagination postPath={postId} />
		</section>
		<PostComments server:defer />
	</main>
</Layout>

<style>
	.main-header {
		width: 70%;
		margin-inline: auto;
		padding-block-start: calc(var(--navbar-height) + 2rem);

		.back-button a {
			display: flex;
			align-items: center;
			gap: 0.5em;
			width: fit-content;
			padding-inline: 1.2em;
			margin-block-end: 2rem;

			line-height: 2em;
			border: 1px solid oklch(var(--clr-text));
			border-radius: 100vmax;
		}
	}

	main {
		max-width: min(90%, calc(var(--max-main-width) + 10rem));
		margin-inline: auto;
		margin-block-end: 2rem;

		section {
			margin-block-end: 4rem;
		}
	}

	article {
		.article-header {
			display: flex;
			flex-direction: column;
			align-items: center;
			padding-block-end: 3rem;

			.image {
				width: 100%;
				height: 25rem;
				object-fit: cover;
				border-radius: 1rem;
			}

			h1 {
				font-size: var(--fs-700);
				font-weight: var(--fw-bold);
				text-wrap: wrap;
				align-self: flex-start;
				background-image: linear-gradient(
					to right,
					oklch(var(--clr-accent)),
					oklch(var(--clr-purple-500))
				);
				color: transparent;
				background-clip: text;
			}

			:global(.date) {
				font-size: var(--fs-400);
				font-weight: var(--fw-bold);
				align-self: flex-start;
				font-style: italic;
			}
		}
	}

	.text {
		margin-block-end: 5rem;
		word-wrap: break-word;

		:global(h2, h3, h4) {
			margin-block-end: 0.8em;
			color: oklch(var(--clr-accent));
		}

		:global(h2) {
			font-size: var(--fs-600);
		}

		:global(h3) {
			font-size: var(--fs-500);
			font-weight: var(--fw-bold);
		}

		:global(p) {
			margin-block-end: 2em;
			font-size: var(--fs-500);
			line-height: 1.5em;
			text-wrap: stable;
		}

		:global(a) {
			color: oklch(var(--clr-accent));
			font-style: italic;
			text-decoration: underline;
			overflow-wrap: anywhere;
		}

		:global(img) {
			margin-block-end: 2em;
			max-width: 100%;
			height: fit-content;
			object-fit: contain;
		}

		:global(strong) {
			font-weight: var(--fw-bold);
			color: oklch(var(--clr-accent));
		}

		:global(em) {
			color: oklch(var(--clr-accent));
			font-style: italic;
		}

		:global(strong > .MathJax) {
			color: oklch(var(--clr-text));
		}

		:global(sup > a) {
			font-size: var(--fs-400);
			font-weight: var(--fw-regular);
		}

		:global(ul) {
			list-style: disc;
			padding-inline-start: 1.5rem;
		}

		:global(ol) {
			list-style: decimal;
			padding-inline-start: 1.5rem;
		}

		:global(li) {
			margin-block-end: 1.5rem;
			padding-inline-start: 1.3rem;
			&:last-child {
				margin-block-end: 2.5rem;
			}
		}

		:global(.footnotes ol) {
			:global(li) {
				margin-block: 1em 0;
			}
			:global(p) {
				margin: 0;
			}
		}

		:global(.footnotes h2::after) {
			content: "";
			display: block;
			height: 2px;
			width: 100%;
			background-color: oklch(var(--clr-text));
		}

		:global(.expressive-code) {
			padding-block-end: 3rem;
			font-size: var(--fs-400);

			:global(.frame pre code) {
				font-size: 1.4rem;
			}
		}

		:global(code) {
			font-size: 0.75em;
			color: oklch(var(--clr-text) / 0.8);
			background-color: oklch(var(--clr-accent) / 0.3);
			padding-inline: 0.3em;
			font-family: "Source Code Pro";
		}
	}
</style>
